{"version":3,"sources":["web-track-browser.cjs.js"],"names":[],"mappingsfile":"index.js","sourcesContent":["\n\nObject.defineProperty(exports, '__esModule', { value: true });\n\nclass WebTracker {\r\n    constructor(opt) {\r\n        var _a, _b;\r\n        this.timer = null;\r\n        this.time = 10;\r\n        this.count = 10;\r\n        this.arr = [];\r\n        this.time = (_a = opt.time) !== null && _a !== void 0 ? _a : 10; //定义时间，number类型\r\n        this.count = (_b = opt.count) !== null && _b !== void 0 ? _b : 10; //定义数据条数，number类型\r\n        this.url = 'https://' + opt.project + '.' + opt.host + '/logstores/' + opt.logstore + '/track';\r\n        this.opt = opt;\r\n        if (opt.installUnloadHook && typeof opt.installUnloadHook === 'function') {\r\n            opt.installUnloadHook(() => {\r\n                this.platformSend(this.assemblePayload());\r\n            });\r\n        }\r\n    }\r\n    assemblePayload(arr = this.arr) {\r\n        const payload = {\r\n            __logs__: arr,\r\n        };\r\n        if (this.opt.tags) {\r\n            payload.__tags__ = this.opt.tags;\r\n        }\r\n        if (this.opt.topic) {\r\n            payload.__topic__ = this.opt.topic;\r\n        }\r\n        if (this.opt.source) {\r\n            payload.__source__ = this.opt.source;\r\n        }\r\n        return JSON.stringify(payload);\r\n    }\r\n    platformSend(payloadStr) {\r\n        if (this.opt.sendPayload && typeof this.opt.sendPayload === 'function') {\r\n            this.opt.sendPayload(this.url, payloadStr);\r\n        }\r\n    }\r\n    transString(obj) {\r\n        let newObj = {};\r\n        for (let i in obj) {\r\n            if (typeof obj[i] == 'object') {\r\n                newObj[i] = JSON.stringify(obj[i]);\r\n            }\r\n            else {\r\n                newObj[i] = String(obj[i]);\r\n            }\r\n        }\r\n        return newObj;\r\n    }\r\n    sendImmediateInner() {\r\n        if (this.arr && this.arr.length > 0) {\r\n            this.platformSend(this.assemblePayload());\r\n            if (this.timer != null) {\r\n                clearTimeout(this.timer);\r\n                this.timer = null;\r\n            }\r\n            this.arr = [];\r\n        }\r\n    }\r\n    sendInner() {\r\n        if (this.timer) {\r\n            if (this.arr.length >= this.count) {\r\n                clearTimeout(this.timer);\r\n                this.timer = null;\r\n                this.sendImmediateInner();\r\n            }\r\n        }\r\n        else {\r\n            const that = this;\r\n            if (this.arr.length >= this.count || this.time <= 0) {\r\n                this.sendImmediateInner();\r\n            }\r\n            else {\r\n                this.timer = setTimeout(function () {\r\n                    that.sendImmediateInner();\r\n                }, this.time * 1000);\r\n            }\r\n        }\r\n    }\r\n    send(originLog) {\r\n        const obj = this.transString(originLog);\r\n        this.arr.push(obj);\r\n        this.sendInner();\r\n    }\r\n    sendImmediate(originLog) {\r\n        const obj = this.transString(originLog);\r\n        this.arr.push(obj);\r\n        this.sendImmediateInner();\r\n    }\r\n    sendBatchLogs(originLogs) {\r\n        const logs = originLogs.map((originLog) => this.transString(originLog));\r\n        this.arr.push(...logs);\r\n        this.sendInner();\r\n    }\r\n    sendBatchLogsImmediate(originLogs) {\r\n        const logs = originLogs.map((originLog) => this.transString(originLog));\r\n        this.arr.push(...logs);\r\n        this.sendImmediateInner();\r\n    }\r\n}\n\nfunction sendBeacon(url, payload) {\r\n    if (navigator && navigator.sendBeacon) {\r\n        return navigator.sendBeacon(`${url}?APIVersion=0.6.0`, payload);\r\n    }\r\n    return false;\r\n}\r\nfunction sendUseXhr(url, reqPayload) {\r\n    const httpRequest_ = new window.XMLHttpRequest();\r\n    httpRequest_.open('POST', url, true);\r\n    httpRequest_.setRequestHeader('x-log-apiversion', '0.6.0');\r\n    httpRequest_.setRequestHeader('x-log-bodyrawsize', reqPayload.length.toString());\r\n    const blob = new Blob([reqPayload], {\r\n        type: 'application/x-protobuf',\r\n    });\r\n    httpRequest_.send(blob);\r\n}\r\nfunction send(url, payload) {\r\n    try {\r\n        if (!sendBeacon(url, payload)) {\r\n            sendUseXhr(url, payload);\r\n        }\r\n    }\r\n    catch (ex) {\r\n        if (window && window.console && typeof window.console.error === 'function') {\r\n            console.error('Failed to log to ali log service because of this exception:\\n' + ex);\r\n            console.error('Failed log data:', url);\r\n        }\r\n    }\r\n}\r\nclass WebTrackerBrowser extends WebTracker {\r\n    constructor(opt) {\r\n        const superOpt = Object.assign({}, opt, {\r\n            installUnloadHook: (hook) => {\r\n                window.addEventListener('beforeunload', () => {\r\n                    hook();\r\n                });\r\n            },\r\n            sendPayload: (url, payload) => {\r\n                send(url, payload);\r\n            },\r\n        });\r\n        super(superOpt);\r\n    }\r\n}\n\nfunction defineGlobal(global, name, api) {\r\n    global[name] = api;\r\n}\r\ndefineGlobal(window, 'SLS_Tracker', WebTrackerBrowser);\n\nexports[\"default\"] = WebTrackerBrowser;\nexports.defineGlobal = defineGlobal;\n//# sourceMappingURL=web-track-browser.cjs.js.map\n"]}